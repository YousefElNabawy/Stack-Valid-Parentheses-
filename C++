class Solution {
public:
    bool isValid(string s) {
        std::stack<char> stack;
        
        for (char c : s) {
            // Push open brackets onto the stack
            if (c == '(' || c == '{' || c == '[') {
                stack.push(c);
            } 
            // Check closing brackets
            else {
                if (stack.empty()) {
                    return false;  // No corresponding open bracket
                }
                
                char top = stack.top();
                if ((c == ')' && top == '(') ||
                    (c == '}' && top == '{') ||
                    (c == ']' && top == '[')) {
                    stack.pop();  // Pop the matching open bracket
                } else {
                    return false;  // Mismatched bracket
                }
            }
        }
        
        return stack.empty();  // If empty, all brackets matched correctly
    }
};
